applications:
  - name: meta-do
    project: argocd
    source:
      path: meta/do
      repoURL: "ssh://git@github.com/masondenney/mdenney-config.git"
      targetRevision: master
    destination:
      namespace: argocd
#      name: do
    syncPolicy:
      automated:
        selfHeal: false
        prune: false

applicationsets:
  - name: all
    namespace: argocd

    generators:
      - git:
          repoURL: ssh://git@github.com/masondenney/mdenney-config.git
          revision: master
          files:
            - path: applications/*/*/home/config.json
            - path: applications/*/*/do/config.json
    template:
      metadata:
        name: "{{path[1]}}-{{path[2]}}-{{path.basename}}"
        annotations:
          argocd.argoproj.io/manifest-generate-paths: ..
      spec:
        # This field gets run through helm templating, so it looks weird.
        # The desired value is: "{{path[1]}}"
        project: "{{path[1]}}"
        source:
          path: "{{path}}"
          repoURL: ssh://git@github.com/masondenney/mdenney-config.git
          targetRevision: master
        destination:
          namespace: "{{config.namespace}}"
          name: "{{path.basename}}"
        syncPolicy:
          automated:
            selfHeal: true
            prune: true
          retry:
            limit: 2
          syncOptions:
            - CreateNamespace=true

projects:
  - name: argocd
    namespace: argocd
    description: Contains the definitions for ArgoCD itself
    sourceRepos:
      - "ssh://git@github.com/masondenney/mdenney-config.git"
      - "ssh://git@github.com/argoproj/argo-helm.git"
    destinations:
      - namespace: "argocd"
        server: https://kubernetes.default.svc

    # Only need to deploy to argocd namespace
    # Deny all cluster-scoped resources from being created, except for Namespace and ClusterRole[Binding]
    clusterResourceWhitelist:
      - group: ""
        kind: Namespace
      - group: "rbac.authorization.k8s.io"
        kind: ClusterRole
      - group: "rbac.authorization.k8s.io"
        kind: ClusterRoleBinding
      - group: apiextensions.k8s.io
        kind: CustomResourceDefinition

    # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
    namespaceResourceBlacklist:
      - group: ""
        kind: ResourceQuota
      - group: ""
        kind: LimitRange
      - group: ""
        kind: NetworkPolicy
    orphanedResources:
      warn: false
