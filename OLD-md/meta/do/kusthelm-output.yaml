apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: argocd
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: ""
    kind: Namespace
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
  description: Contains the definitions for ArgoCD itself
  destinations:
  - namespace: argocd
    server: https://kubernetes.default.svc
  namespaceResourceBlacklist:
  - group: ""
    kind: ResourceQuota
  - group: ""
    kind: LimitRange
  - group: ""
    kind: NetworkPolicy
  orphanedResources:
    warn: false
  sourceRepos:
  - https://github.com/masondenney/mdenney-config
  - https://github.com/argoproj/argo-helm
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: default
spec:
  clusterResourceWhitelist:
  - group: ""
    kind: Namespace
  description: default project
  destinations:
  - namespace: argocd
    server: https://kubernetes.default.svc
  namespaceResourceBlacklist:
  - group: ""
    kind: ResourceQuota
  - group: ""
    kind: LimitRange
  - group: ""
    kind: NetworkPolicy
  orphanedResources:
    warn: true
  sourceRepos:
  - '*'
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: infra
spec:
  clusterResourceWhitelist:
  - group: ""
    kind: Namespace
  - group: cert-manager.io
    kind: ClusterIssuer
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  - group: apiextensions.k8s.io
    kind: CustomResourceDefinition
  - group: gateway.networking.k8s.io
    kind: GatewayClass
  - group: networking.k8s.io
    kind: IngressClass
  - group: admissionregistration.k8s.io
    kind: MutatingWebhookConfiguration
  - group: policy
    kind: PodSecurityPolicy
  - group: admissionregistration.k8s.io
    kind: ValidatingWebhookConfiguration
  description: infrastructure stuff
  destinations:
  - namespace: '*'
    server: https://kubernetes.default.svc
  namespaceResourceBlacklist:
  - group: ""
    kind: ResourceQuota
  - group: ""
    kind: LimitRange
  - group: ""
    kind: NetworkPolicy
  orphanedResources:
    warn: true
  sourceRepos:
  - https://github.com/masondenney/mdenney-config
  - https://kubernetes-charts.storage.googleapis.com
  - https://charts.helm.sh/stable
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: meta-do
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: argocd
  source:
    path: meta/do
    repoURL: https://github.com/masondenney/mdenney-config
    targetRevision: main
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: all
  namespace: argocd
spec:
  generators:
  - git:
      files:
      - path: applications/*/*/home/config.json
      - path: applications/*/*/do/config.json
      repoURL: https://github.com/masondenney/mdenney-config
      revision: main
  template:
    metadata:
      annotations:
        argocd.argoproj.io/manifest-generate-paths: ..
      name: '{{path[1]}}-{{path[2]}}-{{path.basename}}'
    spec:
      destination:
        name: '{{path.basename}}'
        namespace: '{{config.namespace}}'
      project: '{{path[1]}}'
      source:
        path: '{{path}}'
        repoURL: https://github.com/masondenney/mdenney-config
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          limit: 2
        syncOptions:
        - CreateNamespace=true
